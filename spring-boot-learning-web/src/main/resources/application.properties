# logging.level 后面可以根据包路径配置不同资源的 log 级别
logging.level.com.leofee=debug

com.leofee.user.name=leofee
com.leofee.user.sex=male
com.leofee.user.age=22

spring.datasource.url=jdbc:mysql://localhost:3306/spring_boot_learning?useUnicode=true&characterEncoding=utf-8&autoReconnect=true&useSSL=false&serverTimezone=GMT
spring.datasource.username=root
spring.datasource.password=lxf123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 该参数的作用为: 自动创建，更新，验证数据库表结构
# 一共可选四种参数
#
# 1. create： 每次加载 hibernate 时都会删除上一次的生成的表，
# 然后根据你的 model 类再重新来生成新表，哪怕两次没有任何改变也要这样执行，
# 这就是导致数据库表数据丢失的一个重要原因。
#
# 2.create-drop ：每次加载 hibernate 时根据 model 类生成表，
# 但是 sessionFactory 一关闭,表就自动删除
#
# 3.update：最常用的属性，第一次加载 hibernate 时根据 model 类会自动建立起表的结构（前提是先建立好数据库），
# 以后加载 hibernate 时根据 model 类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。
# 要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
#
# 4.validate：每次加载 hibernate 时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
#
spring.jpa.properties.hibernate.hbm2ddl.auto=update

# 数据库引擎
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# 是否打印sql, 用于调试
spring.jpa.show-sql= true